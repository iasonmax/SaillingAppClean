// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SaillingAppClean.Infrastructure.Data;

#nullable disable

namespace SaillingAppClean.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SailingAppClean.Domain.Entities.Ship", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("BaseDailyRate")
                        .HasColumnType("float");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Damages")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HomePort")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastMaintenanceDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PurchasedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Ships");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BaseDailyRate = 250.0,
                            Capacity = 6,
                            CreatedDate = new DateTime(2025, 1, 14, 12, 55, 50, 150, DateTimeKind.Local).AddTicks(3030),
                            Description = "A classic sailing yacht, perfect for coastal cruises.",
                            HomePort = "Miami, FL",
                            LastMaintenanceDate = new DateTime(2023, 10, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sea Serpent",
                            PurchasedDate = new DateTime(2018, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            BaseDailyRate = 400.0,
                            Capacity = 10,
                            CreatedDate = new DateTime(2025, 1, 29, 12, 55, 50, 150, DateTimeKind.Local).AddTicks(3070),
                            Damages = "Minor scratch on hull (repaired)",
                            Description = "A modern catamaran, offering stability and spaciousness.",
                            HomePort = "Tortola, BVI",
                            LastMaintenanceDate = new DateTime(2024, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Ocean Breeze",
                            PurchasedDate = new DateTime(2021, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            BaseDailyRate = 600.0,
                            Capacity = 8,
                            CreatedDate = new DateTime(2024, 12, 15, 12, 55, 50, 150, DateTimeKind.Local).AddTicks(3074),
                            Description = "A sturdy motor yacht, ideal for long-distance voyages.",
                            HomePort = "San Diego, CA",
                            LastMaintenanceDate = new DateTime(2023, 6, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "The Wanderer",
                            PurchasedDate = new DateTime(2015, 7, 4, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            BaseDailyRate = 180.0,
                            Capacity = 4,
                            CreatedDate = new DateTime(2024, 11, 15, 12, 55, 50, 150, DateTimeKind.Local).AddTicks(3077),
                            Description = "A nimble sailboat, great for exploring secluded coves and bays.",
                            HomePort = "Annapolis, MD",
                            LastMaintenanceDate = new DateTime(2023, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Island Hopper",
                            PurchasedDate = new DateTime(2022, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            BaseDailyRate = 1200.0,
                            Capacity = 12,
                            CreatedDate = new DateTime(2025, 2, 8, 12, 55, 50, 150, DateTimeKind.Local).AddTicks(3080),
                            Damages = "Slight interior damage (being repaired)",
                            Description = "A luxurious superyacht, offering unparalleled comfort and style.",
                            HomePort = "Monaco",
                            LastMaintenanceDate = new DateTime(2024, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sunset Dream",
                            PurchasedDate = new DateTime(2020, 9, 18, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
